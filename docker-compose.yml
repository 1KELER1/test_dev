version: '3.8'

volumes:
    static_files:
        name: sn_static_files
    media_files:
        name: sn_media_files
    postgres_data:
        name: sn_postgres_data

services:
    postgres:
        image: postgres:15
        container_name: sn_postgres
        environment:
            POSTGRES_DB: snpostgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - sn_network
        restart: always

    django:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: sn_django
        command: >
          sh -c "python manage.py collectstatic --noinput &&
                 python manage.py runserver 0.0.0.0:8000"
        volumes:
            - static_files:/app/static:rw
            - media_files:/app/media:rw
        environment:
            - DEBUG=True
            - SECRET_KEY=udaisdfaiwurd81672r615162358125@@@!*@%3815200---12321
            - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
            - EMAIL_HOST=smtp.gmail.com
            - EMAIL_PORT=587
            - EMAIL_USE_TLS=True
            - EMAIL_HOST_USER=example@gmail.com
            - EMAIL_HOST_PASSWORD=maple@123
            - POSTGRES_HOST=sn_postgres
            - POSTGRES_PORT=5432
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DATABASE=snpostgres
            - DOMAIN=http://127.0.0.1:8000
            - EMAIL=example@gmail.com
            - ALLOWED_HOSTS=127.0.0.1,localhost,0.0.0.0,5.104.75.36
        depends_on:
            - postgres
        networks:
            - sn_network
        restart: always

    nginx:
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        container_name: sn_nginx
        volumes:
            - static_files:/app/static:ro
            - media_files:/app/media:ro
        ports:
            - "80:80"
        depends_on:
            - django
        networks:
            - sn_network
        restart: always

networks:
    sn_network:
        driver: bridge
    
    
    
